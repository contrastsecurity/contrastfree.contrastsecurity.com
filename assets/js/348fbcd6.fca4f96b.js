"use strict";(self.webpackChunkcontrast_dev=self.webpackChunkcontrast_dev||[]).push([[7218],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),g=a,f=d["".concat(c,".").concat(g)]||d[g]||p[g]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8171:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={title:"JVM Languages",sidebar_position:11},c="JVM Languages",u={unversionedId:"guides/devsec-with-contrast/tutorial-java/jvm-languages",id:"guides/devsec-with-contrast/tutorial-java/jvm-languages",title:"JVM Languages",description:"Developers working in Java, Kotlin, or Scala can use the same agent.",source:"@site/learn/guides/devsec-with-contrast/tutorial-java/jvm-languages.md",sourceDirName:"guides/devsec-with-contrast/tutorial-java",slug:"/guides/devsec-with-contrast/tutorial-java/jvm-languages",permalink:"/learn/guides/devsec-with-contrast/tutorial-java/jvm-languages",editUrl:"https://github.com/contrastsecurity/contrastfree.contrastsecurity.com/blob/master/learn/guides/devsec-with-contrast/tutorial-java/jvm-languages.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"JVM Languages",sidebar_position:11},sidebar:"docsSidebar",previous:{title:"How It Works",permalink:"/learn/guides/devsec-with-contrast/tutorial-java/how-it-works"},next:{title:"How It Works for .NET and .NET Core",permalink:"/learn/guides/devsec-with-contrast/tutorial-dotnet/"}},l={},p=[{value:"No Configuration Needed",id:"no-configuration-needed",level:2},{value:"Focus on Bytecode",id:"focus-on-bytecode",level:2}],d={toc:p};function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"jvm-languages"},"JVM Languages"),(0,o.kt)("p",null,"Developers working in Java, Kotlin, or Scala can use the same agent."),(0,o.kt)("h2",{id:"no-configuration-needed"},"No Configuration Needed"),(0,o.kt)("p",null,"When using Contrast to evaluate the security of your application, there is no configuration needed. The tech stack itself auto-detects the right integration and runtime language semantics used by the application as it loads its classes."),(0,o.kt)("p",null,"The list of ",(0,o.kt)("a",{parentName:"p",href:"https://docs.contrastsecurity.com/en/java-supported-technologies.html"},"Java supported platforms")," contains the list of JDKs, Java versions, and language/runtime versions that are supported. Contrast is compatible with any Java vendor, OpenJDK, J9, etc."),(0,o.kt)("h2",{id:"focus-on-bytecode"},"Focus on Bytecode"),(0,o.kt)("p",null,'Contrast works by instrumenting the bytecode, making it largely language and version independent. Some language agents implement custom improvements based on frameworks or object types, but Contrast should e considered "generally compatible" with any non-listed JVM language.'),(0,o.kt)("p",null,"All Contrast instrumentation undergoes the ",(0,o.kt)("a",{parentName:"p",href:"https://www.oracle.com/java/technologies/security-in-java.html#:~:text=The%20bytecode%20verifier%20acts%20as,has%20passed%20the%20verifier's%20tests."},"bytecode verification process")," to ensure compatibility and ensure operation. The Contrast engineering organization maintains a large corpus of tests across different JVMs and applications, running tests with and without Contrast to ensure there is no compatibility impact and to minimize any performance impact."))}g.isMDXComponent=!0}}]);