"use strict";(self.webpackChunkcontrast_dev=self.webpackChunkcontrast_dev||[]).push([[5411],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return y}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),y=i,f=d["".concat(u,".").concat(y)]||d[y]||p[y]||o;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9362:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return y},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={title:"Continuous Security",sidebar_position:1},u=void 0,c={unversionedId:"guides/devsec-with-contrast/keep-going/index",id:"guides/devsec-with-contrast/keep-going/index",title:"Continuous Security",description:"Once basic security monitoring and detection are in place, the next steps are:",source:"@site/learn/guides/devsec-with-contrast/keep-going/index.md",sourceDirName:"guides/devsec-with-contrast/keep-going",slug:"/guides/devsec-with-contrast/keep-going/",permalink:"/learn/guides/devsec-with-contrast/keep-going/",editUrl:"https://github.com/contrastsecurity/contrastfree.contrastsecurity.com/blob/master/learn/guides/devsec-with-contrast/keep-going/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Continuous Security",sidebar_position:1},sidebar:"docsSidebar",previous:{title:"How Static Analysis Works",permalink:"/learn/guides/devsec-with-contrast/how-it-works/how-static-works"},next:{title:"Look at Results",permalink:"/learn/guides/devsec-with-contrast/keep-going/look-at-results"}},l={},p=[{value:"Continuous Build Security",id:"continuous-build-security",level:2},{value:"Continuous Test Security",id:"continuous-test-security",level:2}],d={toc:p};function y(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Once basic security monitoring and detection are in place, the next steps are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Looking at results, scoping where to get started on security."),(0,o.kt)("li",{parentName:"ul"},"Integrating security results with other systems, streamlining the process in CI/CD, Defect Tracking, and other tools.")),(0,o.kt)("h2",{id:"continuous-build-security"},"Continuous Build Security"),(0,o.kt)("p",null,"Security of composition analysis (SBOM) and static analysis are best done within Continuous Integration servers or on pull requests. The easiest approach for continuous security is:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Integrate the analyzer at your right point, CI build for SBOM or pull request / nightly build for static analysis."),(0,o.kt)("li",{parentName:"ul"},"Integrate new Critical issues into defect tracking systems automatically."),(0,o.kt)("li",{parentName:"ul"},"Let the analyzer's re-scans verify fixes.")),(0,o.kt)("h2",{id:"continuous-test-security"},"Continuous Test Security"),(0,o.kt)("p",null,"Continuous security of integrated analysis means that an agent is present in each test environment to detect new issues and identify which have been properly corrected."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Automate the addition of the integrated analyzer when the application is packaged or deployed, most often in CI."),(0,o.kt)("li",{parentName:"ul"},"Integrate new Critical issues into defect tracking automatically."),(0,o.kt)("li",{parentName:"ul"},"Let auto-remediation close anything previously fixed.")))}y.isMDXComponent=!0}}]);